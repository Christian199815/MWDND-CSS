:root {
  --plane-width: 860em;
  --plane-depth: 860em;
  
  --grid-gap: 25em;
  --grid-columns: 9;
  --grid-rows: 9;

  --perspective: 1090px;

  --cell-width: 
    calc( (   
        var(--plane-width) - (var(--grid-columns) - 1)
        * var(--grid-gap) ) / var(--grid-columns) );
  
  --cell-depth: 
    calc( ( 
        var(--plane-depth) - (var(--grid-rows) 
        * var(--grid-gap) ) ) / var(--grid-rows) );
}


body {
  margin: 0;
  height: 100dvh;
  display: grid;
  place-content: center;
  /* align-items: center; */

  position: relative;
  overflow-x: hidden;
  overflow:hidden;
}

/*#region scene */
 .scene{
      position: relative;
      perspective: var(--perspective);
      perspective-origin: center center;
      /* animation: rotateY 10s linear infinite; */
      display: grid;
      place-items: center;
    }

    .scene, .scene *{
      transform-style: preserve-3d;
    }

    

/* #endregion */

.plane {
  width: var(--plane-width);
  height: var(--plane-depth);

  --currentHeight: 1300px;

  display: grid;
  grid-template-columns: repeat(var(--grid-columns), 1fr);
  grid-template-rows: repeat(var(--grid-rows), 2fr);
  row-gap: var(--grid-gap);
  column-gap: var(--grid-gap);
  grid-auto-flow: dense;

  transform: 
  rotateX(80deg)
  /* translateZ(-300em); */
  /* translateZ(-3000em); */
  ;
  transform-origin: center bottom;
  transform-style: preserve-3d;
  
  background-color: hsl(0, 0%, 85%);
  border: 1px solid hsl(0, 0%, 70%);

  animation:  
      HeightDown 5s linear infinite alternate
    /* rotateZ 10s linear infinite; */
    ;


}

.box {  
  width: var(--x-size);
  height: var(--y-size);
  
  position: relative;
  transform-style: preserve-3d;
  transform-origin: bottom center;
}

.face {
  position: absolute;
  transform-style: preserve-3d;
  background-color: hsl(
    var(--hue),
    100%,
    var(--lightness)
    );

    /* transform: rotate(180deg); */
}

/* .face::after{
  opacity: .2;
  /* rotzooi die 3d breekt */


.face.front,
.face.back {
  width: var(--x-size);
  height: var(--y-size);
}

.face.bottom,
.face.top {
  width: var(--x-size);
  height: var(--z-size);
}

/* Side faces should match the depth */
.face.left,
.face.right {
  width: var(--z-size);
  height: var(--y-size);
}

.face.front {
  --lightness: 66%;
  }

.face.back {
  transform-origin: center bottom;
       
  transform: rotateX(180deg) translateZ(var(--z-size)) translateY(var(--y-size));
  --lightness:62%;
}

.face.bottom {
  bottom: 0;
  transform-origin: bottom;
  transform: rotateX(-90deg) translateY(var(--z-size));
  --lightness: 72%;
}
    
.face.top {
  bottom: 100%;
  transform-origin: bottom;
  transform: rotateX(90deg);
  --lightness: 74%;
}

.face.right {
  left: var(--x-size); 
  bottom: 0;
  transform-origin: left bottom;
  transform: rotateY(90deg);
  --lightness: 70%;
}
    
.face.left {
  right: var(--x-size); 
  bottom: 0;
  transform-origin: right bottom;
  transform: rotateY(-90deg);
  --lightness: 70%;
  /* background-image: url("doc-images/box1.png"); */
}

/* #region Anim */
  
 @keyframes rotateZ {
  from {
    transform: 
    rotateX(80deg)
    /* translateX(-100em) */
    /* translateZ(var(--currentHeight)) */
    rotateZ(0turn);
  }
  to {
    transform:
    rotateX(80deg)
    /* translateX(-100em) */
    /* translateZ(var(--currentHeight)) */
    rotateZ(1turn);
  }
} 


@keyframes rotateY {
  from {
    transform: 
    /* rotateX(80deg) */
    rotateY(0turn);
  }
  to {
    transform:
    /* rotateX(80deg) */
    rotateY(1turn);
  }
} 

@keyframes HeightDown {
  from{
    transform: 
    rotateX(80deg)
    translateZ(0px);
  }

  to{
    transform:  
    rotateX(80deg)
    translateZ(var(--currentHeight));
  }
}

/* #endregion */

.box-container{
  --x-size: var(--cell-width);
  --y-size: var(--cell-depth);
  --z-size: 180em; 
  --hue: 220;
  --z-size: calc(180 * var(--factorA, 1) * var(--factorB, 1) * var(--factorC, 1) * var(--factorD, 1) * 1em);

  
  transform-style: preserve-3d;
  transform: translateZ(var(--z-size));
}

/* #region Change Buildings */

/* Base case - always applies */
.box-container:nth-of-type(1){
  --hue: 110;
}
/* Using prime numbers with the specific factors I suggested */
.box-container:nth-of-type(2n){
  --factorA: 1.14; /* Using the factor value I suggested earlier */
  --hue: 120;
}
.box-container:nth-of-type(3n){
  --factorB: 1.23; /* Using the factor value I suggested earlier */
  --hue: 160;
}
.box-container:nth-of-type(5n){
  --factorC: 1.31; /* Using the factor value I suggested earlier */
  --hue: 320;
}
.box-container:nth-of-type(7n){
  --factorD: 1.07; /* Using the factor value I suggested earlier */
  --hue: 80;
}
.box-container:nth-of-type(11n){
  /* Optional additional selector that could combine factors */
  --factorA: 1.14;
  --factorD: 1.07;
  --hue: 60;
}

/* #endregion */

/* #region cabin */
.cabin{
  transform-style: preserve-3d;

  position: absolute;
  transform: 
  translateZ(35em)
  ;
}

.cabin .box-container{
  --x-size: 20em;
  --y-size: 20em;
  --z-size: 20em; 

  --hue: 360;

  transform-style: preserve-3d;
}

.cabin .box-container .box .face{
  opacity: .7;
  background-color: #fafafa;
  box-shadow: inset 1px 0px 0px 10px rgba(0,0,0,1);
}


.cabin .box-container .box .face.front{
  
  --lightness: 90%;
  opacity: 0;
}

.cabin .box-container .box .face.back{
  /* opacity: .1; */
}


/* #region Remotes */





/* #endregion */
